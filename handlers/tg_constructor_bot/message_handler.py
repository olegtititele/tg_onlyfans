import config.config as cf
from aiogram import Dispatcher, types
from aiogram.types import InputFile
from config.states import States
from create_bot import bot
from keyboards.keyboards import *
from telegram import ParseMode

import states.new_bot_state as new_bot_state
import states.upload_material_state as upload_material_state
import states.photo_price_state as photo_price_state
import states.video_price_state as video_price_state
import states.find_user_state as find_user_state
import states.find_bot_state as find_bot_state
import states.alert_state as alert_state
import states.change_balance_state as change_balance_state
import states.input_card_number_state as input_card_number_state
import states.input_withdrawal_amount_state as input_withdrawal_amount_state
import states.change_commission_percentage_state as change_commission_percentage_state
import states.change_releral_bonus_state as change_releral_bonus_state
import states.change_ref_in_user_bot_state as change_ref_in_user_bot_state
import states.start_referal_sum_state as start_referal_sum_state

async def message_handler(message: types.Message):
    db = DB()
    kb = Keyboards()
    states = States()
    chat_id = message.from_user.id
    
    current_state = db.get_state(chat_id)

    if message.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å üë§":
        db.update_state(chat_id, states.main_state)
        
        subscription_in_minutes = db.get_subscription_time(chat_id)
        
        if subscription_in_minutes >= 60:
            formatted_time = f'{int(subscription_in_minutes / 60)} —á.'
        else:
            formatted_time = f'{subscription_in_minutes} –º–∏–Ω.'
        
        return await bot.send_message(
            chat_id=chat_id, 
            text=f"<b><u>–ü—Ä–æ—Ñ–∏–ª—å</u></b>\n\n<b>üë§ –ü—Ä–æ—Ñ–∏–ª—å:</b> @{message.from_user.username}\n\n<b>üí≥ –ë–∞–ª–∞–Ω—Å:</b> <code>{db.get_balance(chat_id)} ‚ÇΩ</code>\n\n<b>üîó –ö–æ–ª-–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> <code>{len(db.get_referals_count(chat_id))}</code>\n\n<b>üíé –ü—Ä–µ–º–∏—É–º:</b> <code>{formatted_time}</code>",
            parse_mode=ParseMode.HTML,
            reply_markup=kb.profile_kb()
        )
    
    elif message.text == "üíé –ü—Ä–µ–º–∏—É–º üíé":
        db.update_state(chat_id, states.main_state)
        photo = InputFile("background.jpg")
        
        
        return await bot.send_photo(
            chat_id=chat_id, 
            photo=photo,
            caption=f"<b><u>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–æ–π</u></b>\n\n<b>‚Ä¢ –ö–æ–º–∏—Å—Å–∏—è:</b> <s>13%</s> <b>3%</b>\n\n<b>‚Ä¢ –ù–µ—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ –≤ –≤–∞—à–µ–º –±–æ—Ç–µ</b>\n\n<b>‚Ä¢ –û–±—å—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–∞—à –∫–∞–Ω–∞–ª</b>",
            parse_mode=ParseMode.HTML,
            reply_markup=kb.premium_price_kb()
        )

    elif message.text == "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ üë•":
        db.update_state(chat_id, states.main_state)
        bot_username = (await bot.get_me()).username
        
        ref_link = f'<a href="https://t.me/{bot_username}?start={chat_id}">–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞</a>'
        return await bot.send_message(
            chat_id=chat_id, 
            text=f"<b><u>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</u></b>\n\n<b>ü´Ç –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ {db.get_referal_bonus()}% —Å –∫–æ–º–∏—Å—Å–∏–∏!</b>\n\n<b>{ref_link}</b>",
            parse_mode=ParseMode.HTML
        )
        
        
        
    elif message.text == "ü§ñ –ú–æ–∏ –±–æ—Ç—ã ü§ñ":
        cf.page = 1
        photo = InputFile("background.jpg")
        db.update_state(chat_id, states.main_state)
        
        return await bot.send_photo(
            chat_id=chat_id, 
            photo=photo,
            caption=f"<b><u>–ú–æ–∏ –±–æ—Ç—ã</u></b>\n\n<b>ü§ñ –í—Å–µ–≥–æ –±–æ—Ç–æ–≤:</b> <code>{len(db.get_user_bots(chat_id))}</code>",
            parse_mode=ParseMode.HTML,
            reply_markup=kb.user_bots_kb(chat_id, cf.page)[0]
        )
    
    elif message.text == "üìÉ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –±–æ—Ç–æ–≤":
        if chat_id in cf.admins_chat_id:
            cf.page = 1
            
            return await bot.send_message(
                chat_id=chat_id, 
                text="<b><u>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–æ—Ç–æ–≤</u></b>",
                parse_mode=ParseMode.HTML,
                reply_markup=kb.all_bots_kb(cf.page)[0]
            )
            
    elif message.text == "üíØ –ö–æ–º–∏—Å—Å–∏—è":
        if chat_id in cf.admins_chat_id:
            db.update_state(chat_id, states.change_commission_percentage)
            
            return await bot.send_message(
                chat_id=chat_id, 
                text="<b>‚§µÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏:</b>",
                parse_mode=ParseMode.HTML
            )
    
    elif message.text == "üíØ –†–µ—Ñ–µ—Ä–∞–ª":
        if chat_id in cf.admins_chat_id:
            db.update_state(chat_id, states.change_referal_bonus)
            
            return await bot.send_message(
                chat_id=chat_id, 
                text="<b>‚§µÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–∞:</b>",
                parse_mode=ParseMode.HTML
            )
            
    elif message.text == "üíØ –†–µ—Ñ–µ—Ä–∞–ª –≤ –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
        if chat_id in cf.admins_chat_id:
            db.update_state(chat_id, states.change_ref_in_user_bot)
            
            return await bot.send_message(
                chat_id=chat_id, 
                text="<b>‚§µÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤ –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>",
                parse_mode=ParseMode.HTML
            )
        
    elif message.text == "üíØ –†–µ—Ñ–µ—Ä–∞–ª –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ":
        if chat_id in cf.admins_chat_id:
            db.update_state(chat_id, states.start_referal_sum)
            
            return await bot.send_message(
                chat_id=chat_id, 
                text="<b>‚§µÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –≤ –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>",
                parse_mode=ParseMode.HTML
            )
    
    elif message.text == "‚úâÔ∏è –†–∞—Å—Å—ã–ª–∫–∞":
        if chat_id in cf.admins_chat_id:
            db.update_state(chat_id, states.alert)
            
            return await bot.send_message(
                chat_id=chat_id, 
                text="<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç/—Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:</b>",
                parse_mode=ParseMode.HTML
            )
        
    elif message.text == "üí∞ –ó–∞—á–∏—Å–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å":
        if chat_id in cf.admins_chat_id:
            db.update_state(chat_id, states.main_state)
            
            return await bot.send_message(
                chat_id=chat_id, 
                text="<b>–í –∫–∞–∫–æ–º –±–æ—Ç–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?</b>",
                parse_mode=ParseMode.HTML,
                reply_markup=kb.choose_bot_for_popup_kb()
            )
            
    elif message.text == "üè¶ –ó–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥":
        if chat_id in cf.admins_chat_id:
            cf.page = 1
            db.update_state(chat_id, states.main_state)
            
            return await bot.send_message(
                chat_id=chat_id, 
                text="<b><u>–ó–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥</u></b>",
                parse_mode=ParseMode.HTML,
                reply_markup=kb.withdrawal_requests_kb(cf.page)[0]
            )
        
        
    
    if current_state == states.new_bot_state:
        await new_bot_state.message_handler(message, chat_id)
        
    elif current_state == states.upload_material:
        await upload_material_state.message_handler(message, chat_id)
                
    elif current_state == states.photo_price_state:
        await photo_price_state.message_handler(message, chat_id)
        
    elif current_state == states.video_price_state:
        await video_price_state.message_handler(message, chat_id)
        
    elif current_state == states.find_user:
        await find_user_state.message_handler(message, chat_id)
        
    elif current_state == states.find_bot:
        await find_bot_state.message_handler(message, chat_id)
        
    elif current_state == states.change_balance:
        await change_balance_state.message_handler(message, chat_id)
                
    elif current_state == states.alert:
        await alert_state.message_handler(message, chat_id)
             
    elif current_state == states.input_card_number:
        await input_card_number_state.message_handler(message, chat_id)
    
    elif current_state == states.input_withdrawal_amount:
        await input_withdrawal_amount_state.message_handler(message, chat_id)
    
    elif current_state == states.change_commission_percentage:
        await change_commission_percentage_state.message_handler(message, chat_id)
    
    elif current_state == states.change_referal_bonus:
        await change_releral_bonus_state.message_handler(message, chat_id)
    
    elif current_state == states.change_ref_in_user_bot:
        await change_ref_in_user_bot_state.message_handler(message, chat_id)
    elif current_state == states.start_referal_sum:
        await start_referal_sum_state.message_handler(message, chat_id)
    else:
        return
  


def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(message_handler, content_types=types.ContentTypes.ANY)
