import config.config as cf
from aiogram import types
from aiogram.types import InputFile
from config.states import States
from create_bot import bot
from db.db import DB
from keyboards.keyboards import *
from telegram import ParseMode


async def back_buttons_callback(call, chat_id, message_id):
    db = DB()
    kb = Keyboards()
    states = States()
    
    if call.data == "back_to_user_bots_list":
        cf.page = 1
        db.update_state(chat_id, states.main_state)
        
        return await bot.edit_message_caption(
            chat_id=chat_id,
            message_id=message_id,
            caption=f"<b><u>–ú–æ–∏ –±–æ—Ç—ã</u></b>\n\n<b>ü§ñ –í—Å–µ–≥–æ –±–æ—Ç–æ–≤:</b> <code>{len(db.get_user_bots(chat_id))}</code>",
            parse_mode=ParseMode.HTML,
            reply_markup=kb.user_bots_kb(chat_id, cf.page)[0]
        )

    if call.data == "back_to_user_bot_info":
        db.update_state(chat_id, states.main_state)
        
        current_bot = db.get_current_bot(chat_id)
        created_date = db.get_user_bot_created_time(current_bot)
        images = len(db.get_bot_photos(current_bot))
        photo_price = db.get_user_bot_photo_price(current_bot)
        videos = len(db.get_bot_videos(current_bot))
        video_price = db.get_user_bot_video_price(current_bot)
        
        media = types.InputMediaPhoto(media=InputFile("background.jpg"))
            
        await bot.edit_message_media(
            chat_id=chat_id,
            message_id=message_id,
            media=media,
        )
        
        return await bot.edit_message_caption(
            chat_id=chat_id,
            message_id=message_id,
            caption=f"<b><u>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ</u></b>\n\n<b>ü§ñ Username:</b> @{current_bot}\n\n<b>‚åöÔ∏è –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞:</b> <code>{created_date}</code>\n\n<b>üñº –§–æ—Ç–æ:</b> <code>{images}</code>\n<b>üí≤ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ñ–æ—Ç–æ:</b> <code>{photo_price} ‚ÇΩ</code>\n\n<b>üñº –í–∏–¥–µ–æ:</b> <code>{videos}</code>\n<b>üí≤ –°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∏–¥–µ–æ:</b> <code>{video_price} ‚ÇΩ</code>",
            parse_mode=ParseMode.HTML,
            reply_markup=kb.bot_info_kb()
        )
        
    if call.data == "back_to_profile":

        return await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text=f"<b><u>–ü—Ä–æ—Ñ–∏–ª—å</u></b>\n\n<b>üë§ –ü—Ä–æ—Ñ–∏–ª—å:</b> @{call.from_user.username}\n\n<b>üí≥ –ë–∞–ª–∞–Ω—Å:</b> <code>{db.get_balance(chat_id)} ‚ÇΩ</code>",
            parse_mode=ParseMode.HTML,
            reply_markup=kb.profile_kb()
        )
    
    if call.data == "back_to_all_bots_list":
        
        return await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="<b><u>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–æ—Ç–æ–≤</u></b>",
            parse_mode=ParseMode.HTML,
            reply_markup=kb.all_bots_kb(cf.page)[0]
        )
    
    if call.data == "back_to_withdrawal_requests_list":
        
        return await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="<b><u>–ó–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥</u></b>",
            parse_mode=ParseMode.HTML,
            reply_markup=kb.withdrawal_requests_kb(cf.page)[0]
        )
        
    if call.data == "back_to_premium":

        return await bot.edit_message_caption(
            chat_id=chat_id,
            message_id=message_id,
            caption=f"<b><u>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–æ–π</u></b>\n\n<b>‚Ä¢ –ö–æ–º–∏—Å—Å–∏—è:</b> <s>13%</s> <b>3%</b>\n\n<b>‚Ä¢ –ù–µ—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ –≤ –≤–∞—à–µ–º –±–æ—Ç–µ</b>\n\n<b>‚Ä¢ –û–±—å—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–∞—à –∫–∞–Ω–∞–ª</b>",
            parse_mode=ParseMode.HTML,
            reply_markup=kb.premium_price_kb()
        )
